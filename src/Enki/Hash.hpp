#pragma once

// These hash functions exist as a result of manual(well, automated) loop unrolling, as MSVC refused to use them at compile time otherwise.
// Templating it doesn't work either
// todo: c++20 check again if MSVC is better at it

using HashedID = uint32_t;

constexpr HashedID hash([[maybe_unused]]const char(&input)[1])
{
	return 0;
}

constexpr HashedID hash(const char(&input)[2])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[3])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[4])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[5])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[6])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[7])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[8])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[9])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[10])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[11])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[12])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[13])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[14])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[12]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[15])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[12]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[13]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[16])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[12]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[13]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[14]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[17])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[12]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[13]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[14]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[15]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[18])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[12]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[13]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[14]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[15]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[16]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[19])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[12]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[13]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[14]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[15]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[16]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[17]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[20])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[12]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[13]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[14]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[15]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[16]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[17]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[18]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[21])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[12]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[13]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[14]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[15]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[16]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[17]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[18]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[19]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[22])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[12]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[13]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[14]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[15]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[16]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[17]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[18]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[19]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[20]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[23])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[12]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[13]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[14]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[15]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[16]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[17]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[18]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[19]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[20]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[21]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[24])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[12]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[13]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[14]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[15]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[16]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[17]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[18]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[19]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[20]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[21]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[22]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[25])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[12]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[13]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[14]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[15]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[16]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[17]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[18]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[19]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[20]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[21]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[22]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[23]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[26])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[12]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[13]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[14]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[15]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[16]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[17]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[18]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[19]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[20]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[21]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[22]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[23]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[24]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[27])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[12]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[13]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[14]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[15]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[16]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[17]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[18]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[19]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[20]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[21]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[22]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[23]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[24]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[25]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[28])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[12]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[13]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[14]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[15]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[16]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[17]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[18]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[19]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[20]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[21]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[22]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[23]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[24]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[25]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[26]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[29])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[12]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[13]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[14]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[15]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[16]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[17]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[18]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[19]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[20]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[21]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[22]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[23]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[24]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[25]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[26]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[27]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[30])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[12]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[13]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[14]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[15]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[16]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[17]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[18]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[19]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[20]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[21]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[22]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[23]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[24]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[25]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[26]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[27]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[28]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[31])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[12]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[13]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[14]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[15]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[16]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[17]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[18]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[19]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[20]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[21]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[22]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[23]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[24]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[25]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[26]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[27]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[28]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[29]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[32])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[12]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[13]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[14]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[15]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[16]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[17]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[18]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[19]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[20]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[21]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[22]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[23]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[24]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[25]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[26]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[27]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[28]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[29]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[30]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[33])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[12]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[13]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[14]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[15]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[16]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[17]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[18]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[19]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[20]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[21]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[22]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[23]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[24]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[25]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[26]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[27]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[28]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[29]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[30]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[31]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[34])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[12]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[13]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[14]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[15]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[16]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[17]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[18]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[19]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[20]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[21]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[22]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[23]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[24]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[25]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[26]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[27]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[28]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[29]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[30]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[31]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[32]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[35])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[12]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[13]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[14]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[15]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[16]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[17]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[18]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[19]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[20]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[21]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[22]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[23]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[24]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[25]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[26]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[27]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[28]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[29]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[30]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[31]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[32]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[33]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[36])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[12]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[13]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[14]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[15]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[16]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[17]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[18]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[19]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[20]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[21]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[22]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[23]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[24]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[25]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[26]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[27]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[28]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[29]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[30]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[31]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[32]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[33]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[34]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[37])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[12]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[13]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[14]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[15]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[16]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[17]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[18]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[19]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[20]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[21]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[22]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[23]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[24]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[25]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[26]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[27]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[28]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[29]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[30]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[31]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[32]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[33]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[34]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[35]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[38])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[12]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[13]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[14]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[15]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[16]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[17]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[18]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[19]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[20]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[21]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[22]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[23]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[24]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[25]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[26]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[27]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[28]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[29]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[30]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[31]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[32]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[33]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[34]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[35]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[36]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[39])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[12]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[13]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[14]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[15]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[16]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[17]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[18]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[19]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[20]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[21]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[22]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[23]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[24]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[25]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[26]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[27]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[28]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[29]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[30]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[31]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[32]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[33]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[34]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[35]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[36]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[37]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[40])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[12]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[13]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[14]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[15]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[16]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[17]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[18]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[19]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[20]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[21]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[22]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[23]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[24]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[25]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[26]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[27]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[28]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[29]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[30]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[31]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[32]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[33]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[34]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[35]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[36]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[37]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[38]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[41])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[12]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[13]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[14]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[15]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[16]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[17]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[18]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[19]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[20]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[21]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[22]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[23]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[24]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[25]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[26]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[27]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[28]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[29]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[30]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[31]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[32]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[33]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[34]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[35]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[36]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[37]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[38]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[39]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[42])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[12]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[13]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[14]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[15]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[16]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[17]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[18]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[19]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[20]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[21]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[22]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[23]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[24]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[25]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[26]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[27]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[28]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[29]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[30]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[31]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[32]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[33]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[34]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[35]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[36]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[37]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[38]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[39]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[40]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[43])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[12]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[13]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[14]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[15]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[16]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[17]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[18]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[19]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[20]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[21]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[22]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[23]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[24]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[25]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[26]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[27]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[28]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[29]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[30]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[31]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[32]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[33]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[34]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[35]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[36]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[37]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[38]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[39]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[40]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[41]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[44])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[12]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[13]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[14]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[15]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[16]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[17]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[18]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[19]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[20]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[21]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[22]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[23]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[24]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[25]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[26]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[27]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[28]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[29]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[30]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[31]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[32]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[33]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[34]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[35]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[36]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[37]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[38]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[39]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[40]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[41]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[42]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[45])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[12]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[13]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[14]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[15]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[16]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[17]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[18]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[19]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[20]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[21]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[22]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[23]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[24]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[25]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[26]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[27]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[28]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[29]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[30]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[31]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[32]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[33]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[34]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[35]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[36]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[37]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[38]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[39]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[40]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[41]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[42]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[43]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[46])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[12]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[13]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[14]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[15]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[16]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[17]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[18]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[19]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[20]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[21]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[22]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[23]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[24]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[25]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[26]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[27]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[28]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[29]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[30]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[31]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[32]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[33]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[34]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[35]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[36]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[37]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[38]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[39]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[40]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[41]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[42]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[43]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[44]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[47])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[12]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[13]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[14]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[15]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[16]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[17]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[18]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[19]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[20]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[21]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[22]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[23]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[24]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[25]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[26]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[27]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[28]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[29]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[30]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[31]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[32]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[33]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[34]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[35]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[36]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[37]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[38]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[39]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[40]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[41]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[42]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[43]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[44]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[45]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[48])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[12]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[13]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[14]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[15]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[16]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[17]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[18]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[19]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[20]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[21]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[22]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[23]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[24]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[25]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[26]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[27]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[28]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[29]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[30]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[31]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[32]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[33]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[34]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[35]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[36]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[37]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[38]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[39]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[40]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[41]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[42]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[43]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[44]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[45]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[46]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[49])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[12]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[13]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[14]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[15]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[16]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[17]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[18]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[19]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[20]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[21]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[22]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[23]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[24]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[25]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[26]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[27]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[28]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[29]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[30]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[31]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[32]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[33]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[34]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[35]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[36]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[37]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[38]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[39]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[40]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[41]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[42]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[43]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[44]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[45]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[46]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[47]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[50])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[12]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[13]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[14]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[15]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[16]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[17]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[18]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[19]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[20]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[21]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[22]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[23]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[24]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[25]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[26]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[27]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[28]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[29]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[30]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[31]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[32]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[33]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[34]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[35]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[36]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[37]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[38]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[39]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[40]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[41]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[42]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[43]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[44]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[45]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[46]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[47]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[48]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[51])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[12]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[13]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[14]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[15]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[16]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[17]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[18]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[19]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[20]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[21]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[22]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[23]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[24]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[25]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[26]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[27]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[28]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[29]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[30]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[31]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[32]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[33]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[34]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[35]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[36]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[37]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[38]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[39]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[40]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[41]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[42]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[43]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[44]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[45]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[46]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[47]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[48]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[49]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[52])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[12]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[13]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[14]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[15]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[16]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[17]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[18]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[19]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[20]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[21]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[22]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[23]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[24]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[25]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[26]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[27]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[28]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[29]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[30]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[31]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[32]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[33]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[34]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[35]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[36]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[37]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[38]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[39]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[40]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[41]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[42]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[43]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[44]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[45]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[46]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[47]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[48]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[49]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[50]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[53])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[12]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[13]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[14]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[15]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[16]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[17]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[18]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[19]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[20]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[21]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[22]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[23]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[24]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[25]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[26]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[27]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[28]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[29]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[30]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[31]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[32]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[33]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[34]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[35]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[36]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[37]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[38]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[39]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[40]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[41]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[42]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[43]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[44]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[45]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[46]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[47]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[48]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[49]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[50]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[51]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[54])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[12]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[13]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[14]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[15]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[16]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[17]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[18]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[19]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[20]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[21]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[22]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[23]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[24]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[25]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[26]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[27]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[28]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[29]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[30]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[31]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[32]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[33]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[34]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[35]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[36]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[37]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[38]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[39]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[40]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[41]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[42]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[43]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[44]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[45]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[46]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[47]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[48]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[49]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[50]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[51]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[52]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[55])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[12]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[13]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[14]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[15]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[16]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[17]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[18]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[19]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[20]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[21]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[22]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[23]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[24]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[25]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[26]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[27]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[28]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[29]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[30]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[31]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[32]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[33]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[34]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[35]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[36]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[37]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[38]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[39]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[40]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[41]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[42]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[43]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[44]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[45]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[46]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[47]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[48]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[49]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[50]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[51]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[52]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[53]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[56])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[12]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[13]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[14]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[15]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[16]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[17]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[18]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[19]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[20]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[21]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[22]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[23]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[24]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[25]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[26]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[27]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[28]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[29]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[30]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[31]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[32]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[33]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[34]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[35]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[36]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[37]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[38]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[39]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[40]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[41]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[42]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[43]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[44]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[45]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[46]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[47]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[48]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[49]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[50]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[51]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[52]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[53]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[54]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[57])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[12]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[13]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[14]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[15]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[16]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[17]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[18]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[19]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[20]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[21]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[22]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[23]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[24]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[25]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[26]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[27]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[28]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[29]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[30]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[31]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[32]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[33]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[34]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[35]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[36]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[37]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[38]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[39]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[40]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[41]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[42]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[43]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[44]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[45]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[46]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[47]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[48]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[49]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[50]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[51]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[52]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[53]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[54]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[55]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[58])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[12]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[13]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[14]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[15]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[16]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[17]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[18]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[19]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[20]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[21]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[22]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[23]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[24]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[25]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[26]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[27]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[28]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[29]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[30]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[31]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[32]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[33]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[34]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[35]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[36]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[37]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[38]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[39]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[40]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[41]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[42]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[43]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[44]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[45]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[46]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[47]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[48]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[49]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[50]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[51]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[52]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[53]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[54]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[55]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[56]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[59])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[12]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[13]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[14]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[15]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[16]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[17]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[18]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[19]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[20]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[21]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[22]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[23]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[24]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[25]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[26]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[27]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[28]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[29]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[30]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[31]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[32]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[33]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[34]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[35]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[36]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[37]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[38]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[39]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[40]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[41]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[42]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[43]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[44]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[45]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[46]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[47]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[48]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[49]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[50]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[51]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[52]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[53]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[54]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[55]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[56]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[57]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[60])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[12]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[13]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[14]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[15]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[16]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[17]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[18]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[19]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[20]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[21]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[22]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[23]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[24]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[25]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[26]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[27]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[28]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[29]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[30]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[31]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[32]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[33]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[34]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[35]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[36]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[37]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[38]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[39]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[40]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[41]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[42]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[43]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[44]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[45]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[46]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[47]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[48]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[49]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[50]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[51]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[52]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[53]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[54]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[55]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[56]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[57]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[58]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[61])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[12]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[13]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[14]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[15]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[16]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[17]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[18]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[19]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[20]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[21]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[22]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[23]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[24]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[25]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[26]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[27]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[28]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[29]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[30]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[31]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[32]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[33]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[34]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[35]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[36]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[37]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[38]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[39]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[40]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[41]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[42]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[43]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[44]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[45]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[46]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[47]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[48]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[49]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[50]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[51]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[52]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[53]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[54]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[55]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[56]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[57]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[58]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[59]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[62])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[12]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[13]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[14]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[15]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[16]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[17]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[18]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[19]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[20]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[21]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[22]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[23]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[24]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[25]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[26]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[27]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[28]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[29]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[30]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[31]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[32]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[33]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[34]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[35]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[36]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[37]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[38]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[39]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[40]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[41]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[42]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[43]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[44]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[45]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[46]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[47]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[48]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[49]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[50]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[51]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[52]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[53]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[54]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[55]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[56]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[57]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[58]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[59]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[60]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[63])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[12]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[13]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[14]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[15]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[16]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[17]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[18]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[19]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[20]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[21]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[22]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[23]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[24]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[25]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[26]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[27]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[28]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[29]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[30]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[31]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[32]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[33]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[34]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[35]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[36]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[37]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[38]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[39]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[40]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[41]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[42]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[43]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[44]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[45]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[46]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[47]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[48]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[49]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[50]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[51]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[52]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[53]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[54]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[55]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[56]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[57]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[58]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[59]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[60]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[61]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[64])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[12]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[13]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[14]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[15]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[16]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[17]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[18]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[19]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[20]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[21]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[22]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[23]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[24]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[25]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[26]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[27]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[28]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[29]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[30]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[31]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[32]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[33]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[34]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[35]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[36]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[37]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[38]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[39]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[40]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[41]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[42]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[43]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[44]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[45]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[46]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[47]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[48]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[49]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[50]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[51]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[52]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[53]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[54]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[55]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[56]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[57]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[58]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[59]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[60]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[61]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[62]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[65])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[12]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[13]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[14]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[15]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[16]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[17]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[18]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[19]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[20]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[21]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[22]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[23]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[24]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[25]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[26]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[27]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[28]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[29]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[30]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[31]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[32]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[33]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[34]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[35]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[36]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[37]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[38]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[39]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[40]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[41]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[42]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[43]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[44]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[45]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[46]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[47]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[48]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[49]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[50]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[51]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[52]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[53]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[54]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[55]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[56]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[57]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[58]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[59]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[60]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[61]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[62]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[63]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[66])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[12]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[13]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[14]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[15]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[16]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[17]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[18]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[19]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[20]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[21]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[22]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[23]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[24]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[25]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[26]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[27]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[28]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[29]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[30]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[31]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[32]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[33]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[34]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[35]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[36]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[37]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[38]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[39]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[40]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[41]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[42]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[43]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[44]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[45]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[46]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[47]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[48]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[49]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[50]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[51]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[52]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[53]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[54]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[55]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[56]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[57]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[58]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[59]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[60]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[61]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[62]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[63]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[64]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[67])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[12]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[13]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[14]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[15]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[16]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[17]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[18]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[19]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[20]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[21]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[22]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[23]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[24]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[25]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[26]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[27]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[28]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[29]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[30]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[31]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[32]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[33]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[34]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[35]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[36]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[37]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[38]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[39]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[40]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[41]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[42]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[43]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[44]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[45]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[46]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[47]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[48]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[49]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[50]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[51]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[52]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[53]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[54]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[55]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[56]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[57]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[58]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[59]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[60]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[61]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[62]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[63]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[64]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[65]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[68])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[12]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[13]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[14]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[15]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[16]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[17]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[18]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[19]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[20]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[21]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[22]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[23]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[24]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[25]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[26]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[27]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[28]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[29]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[30]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[31]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[32]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[33]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[34]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[35]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[36]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[37]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[38]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[39]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[40]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[41]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[42]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[43]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[44]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[45]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[46]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[47]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[48]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[49]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[50]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[51]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[52]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[53]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[54]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[55]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[56]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[57]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[58]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[59]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[60]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[61]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[62]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[63]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[64]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[65]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[66]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[69])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[12]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[13]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[14]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[15]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[16]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[17]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[18]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[19]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[20]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[21]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[22]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[23]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[24]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[25]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[26]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[27]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[28]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[29]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[30]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[31]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[32]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[33]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[34]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[35]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[36]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[37]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[38]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[39]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[40]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[41]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[42]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[43]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[44]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[45]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[46]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[47]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[48]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[49]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[50]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[51]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[52]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[53]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[54]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[55]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[56]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[57]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[58]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[59]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[60]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[61]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[62]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[63]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[64]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[65]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[66]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[67]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[70])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[12]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[13]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[14]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[15]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[16]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[17]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[18]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[19]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[20]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[21]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[22]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[23]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[24]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[25]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[26]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[27]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[28]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[29]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[30]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[31]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[32]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[33]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[34]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[35]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[36]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[37]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[38]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[39]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[40]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[41]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[42]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[43]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[44]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[45]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[46]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[47]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[48]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[49]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[50]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[51]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[52]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[53]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[54]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[55]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[56]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[57]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[58]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[59]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[60]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[61]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[62]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[63]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[64]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[65]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[66]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[67]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[68]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[71])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[12]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[13]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[14]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[15]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[16]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[17]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[18]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[19]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[20]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[21]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[22]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[23]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[24]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[25]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[26]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[27]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[28]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[29]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[30]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[31]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[32]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[33]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[34]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[35]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[36]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[37]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[38]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[39]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[40]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[41]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[42]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[43]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[44]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[45]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[46]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[47]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[48]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[49]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[50]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[51]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[52]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[53]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[54]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[55]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[56]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[57]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[58]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[59]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[60]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[61]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[62]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[63]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[64]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[65]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[66]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[67]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[68]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[69]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[72])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[12]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[13]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[14]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[15]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[16]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[17]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[18]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[19]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[20]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[21]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[22]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[23]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[24]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[25]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[26]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[27]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[28]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[29]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[30]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[31]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[32]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[33]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[34]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[35]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[36]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[37]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[38]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[39]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[40]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[41]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[42]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[43]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[44]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[45]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[46]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[47]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[48]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[49]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[50]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[51]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[52]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[53]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[54]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[55]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[56]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[57]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[58]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[59]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[60]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[61]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[62]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[63]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[64]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[65]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[66]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[67]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[68]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[69]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[70]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[73])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[12]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[13]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[14]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[15]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[16]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[17]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[18]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[19]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[20]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[21]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[22]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[23]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[24]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[25]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[26]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[27]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[28]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[29]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[30]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[31]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[32]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[33]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[34]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[35]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[36]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[37]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[38]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[39]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[40]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[41]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[42]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[43]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[44]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[45]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[46]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[47]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[48]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[49]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[50]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[51]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[52]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[53]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[54]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[55]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[56]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[57]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[58]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[59]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[60]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[61]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[62]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[63]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[64]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[65]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[66]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[67]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[68]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[69]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[70]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[71]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[74])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[12]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[13]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[14]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[15]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[16]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[17]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[18]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[19]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[20]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[21]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[22]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[23]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[24]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[25]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[26]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[27]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[28]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[29]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[30]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[31]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[32]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[33]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[34]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[35]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[36]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[37]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[38]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[39]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[40]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[41]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[42]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[43]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[44]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[45]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[46]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[47]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[48]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[49]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[50]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[51]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[52]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[53]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[54]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[55]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[56]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[57]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[58]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[59]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[60]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[61]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[62]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[63]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[64]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[65]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[66]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[67]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[68]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[69]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[70]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[71]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[72]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[75])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[12]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[13]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[14]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[15]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[16]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[17]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[18]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[19]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[20]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[21]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[22]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[23]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[24]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[25]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[26]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[27]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[28]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[29]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[30]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[31]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[32]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[33]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[34]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[35]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[36]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[37]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[38]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[39]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[40]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[41]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[42]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[43]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[44]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[45]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[46]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[47]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[48]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[49]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[50]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[51]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[52]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[53]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[54]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[55]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[56]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[57]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[58]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[59]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[60]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[61]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[62]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[63]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[64]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[65]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[66]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[67]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[68]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[69]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[70]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[71]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[72]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[73]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[76])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[12]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[13]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[14]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[15]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[16]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[17]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[18]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[19]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[20]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[21]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[22]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[23]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[24]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[25]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[26]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[27]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[28]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[29]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[30]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[31]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[32]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[33]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[34]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[35]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[36]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[37]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[38]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[39]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[40]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[41]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[42]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[43]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[44]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[45]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[46]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[47]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[48]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[49]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[50]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[51]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[52]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[53]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[54]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[55]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[56]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[57]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[58]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[59]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[60]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[61]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[62]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[63]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[64]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[65]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[66]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[67]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[68]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[69]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[70]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[71]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[72]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[73]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[74]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[77])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[12]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[13]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[14]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[15]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[16]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[17]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[18]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[19]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[20]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[21]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[22]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[23]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[24]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[25]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[26]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[27]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[28]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[29]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[30]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[31]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[32]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[33]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[34]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[35]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[36]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[37]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[38]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[39]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[40]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[41]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[42]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[43]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[44]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[45]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[46]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[47]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[48]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[49]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[50]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[51]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[52]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[53]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[54]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[55]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[56]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[57]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[58]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[59]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[60]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[61]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[62]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[63]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[64]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[65]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[66]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[67]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[68]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[69]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[70]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[71]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[72]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[73]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[74]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[75]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[78])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[12]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[13]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[14]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[15]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[16]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[17]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[18]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[19]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[20]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[21]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[22]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[23]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[24]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[25]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[26]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[27]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[28]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[29]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[30]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[31]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[32]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[33]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[34]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[35]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[36]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[37]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[38]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[39]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[40]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[41]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[42]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[43]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[44]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[45]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[46]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[47]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[48]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[49]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[50]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[51]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[52]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[53]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[54]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[55]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[56]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[57]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[58]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[59]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[60]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[61]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[62]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[63]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[64]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[65]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[66]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[67]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[68]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[69]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[70]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[71]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[72]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[73]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[74]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[75]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[76]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[79])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[12]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[13]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[14]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[15]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[16]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[17]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[18]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[19]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[20]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[21]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[22]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[23]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[24]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[25]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[26]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[27]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[28]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[29]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[30]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[31]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[32]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[33]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[34]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[35]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[36]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[37]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[38]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[39]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[40]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[41]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[42]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[43]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[44]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[45]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[46]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[47]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[48]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[49]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[50]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[51]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[52]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[53]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[54]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[55]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[56]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[57]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[58]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[59]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[60]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[61]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[62]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[63]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[64]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[65]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[66]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[67]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[68]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[69]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[70]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[71]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[72]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[73]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[74]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[75]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[76]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[77]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[80])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[12]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[13]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[14]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[15]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[16]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[17]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[18]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[19]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[20]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[21]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[22]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[23]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[24]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[25]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[26]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[27]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[28]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[29]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[30]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[31]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[32]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[33]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[34]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[35]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[36]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[37]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[38]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[39]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[40]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[41]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[42]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[43]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[44]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[45]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[46]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[47]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[48]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[49]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[50]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[51]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[52]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[53]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[54]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[55]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[56]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[57]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[58]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[59]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[60]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[61]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[62]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[63]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[64]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[65]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[66]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[67]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[68]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[69]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[70]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[71]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[72]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[73]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[74]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[75]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[76]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[77]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[78]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[81])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[12]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[13]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[14]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[15]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[16]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[17]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[18]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[19]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[20]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[21]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[22]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[23]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[24]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[25]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[26]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[27]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[28]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[29]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[30]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[31]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[32]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[33]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[34]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[35]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[36]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[37]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[38]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[39]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[40]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[41]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[42]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[43]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[44]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[45]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[46]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[47]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[48]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[49]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[50]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[51]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[52]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[53]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[54]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[55]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[56]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[57]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[58]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[59]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[60]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[61]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[62]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[63]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[64]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[65]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[66]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[67]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[68]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[69]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[70]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[71]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[72]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[73]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[74]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[75]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[76]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[77]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[78]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[79]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[82])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[12]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[13]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[14]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[15]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[16]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[17]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[18]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[19]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[20]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[21]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[22]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[23]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[24]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[25]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[26]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[27]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[28]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[29]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[30]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[31]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[32]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[33]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[34]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[35]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[36]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[37]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[38]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[39]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[40]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[41]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[42]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[43]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[44]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[45]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[46]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[47]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[48]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[49]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[50]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[51]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[52]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[53]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[54]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[55]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[56]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[57]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[58]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[59]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[60]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[61]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[62]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[63]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[64]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[65]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[66]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[67]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[68]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[69]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[70]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[71]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[72]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[73]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[74]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[75]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[76]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[77]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[78]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[79]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[80]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[83])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[12]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[13]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[14]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[15]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[16]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[17]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[18]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[19]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[20]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[21]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[22]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[23]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[24]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[25]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[26]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[27]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[28]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[29]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[30]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[31]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[32]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[33]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[34]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[35]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[36]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[37]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[38]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[39]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[40]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[41]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[42]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[43]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[44]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[45]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[46]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[47]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[48]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[49]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[50]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[51]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[52]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[53]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[54]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[55]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[56]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[57]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[58]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[59]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[60]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[61]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[62]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[63]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[64]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[65]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[66]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[67]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[68]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[69]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[70]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[71]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[72]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[73]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[74]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[75]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[76]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[77]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[78]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[79]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[80]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[81]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[84])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[12]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[13]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[14]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[15]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[16]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[17]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[18]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[19]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[20]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[21]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[22]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[23]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[24]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[25]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[26]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[27]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[28]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[29]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[30]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[31]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[32]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[33]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[34]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[35]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[36]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[37]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[38]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[39]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[40]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[41]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[42]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[43]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[44]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[45]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[46]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[47]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[48]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[49]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[50]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[51]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[52]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[53]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[54]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[55]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[56]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[57]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[58]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[59]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[60]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[61]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[62]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[63]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[64]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[65]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[66]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[67]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[68]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[69]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[70]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[71]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[72]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[73]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[74]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[75]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[76]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[77]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[78]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[79]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[80]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[81]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[82]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[85])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[12]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[13]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[14]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[15]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[16]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[17]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[18]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[19]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[20]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[21]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[22]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[23]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[24]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[25]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[26]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[27]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[28]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[29]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[30]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[31]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[32]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[33]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[34]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[35]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[36]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[37]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[38]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[39]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[40]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[41]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[42]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[43]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[44]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[45]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[46]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[47]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[48]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[49]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[50]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[51]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[52]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[53]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[54]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[55]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[56]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[57]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[58]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[59]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[60]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[61]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[62]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[63]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[64]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[65]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[66]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[67]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[68]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[69]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[70]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[71]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[72]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[73]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[74]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[75]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[76]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[77]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[78]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[79]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[80]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[81]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[82]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[83]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[86])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[12]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[13]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[14]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[15]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[16]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[17]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[18]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[19]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[20]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[21]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[22]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[23]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[24]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[25]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[26]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[27]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[28]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[29]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[30]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[31]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[32]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[33]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[34]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[35]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[36]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[37]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[38]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[39]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[40]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[41]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[42]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[43]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[44]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[45]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[46]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[47]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[48]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[49]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[50]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[51]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[52]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[53]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[54]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[55]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[56]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[57]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[58]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[59]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[60]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[61]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[62]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[63]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[64]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[65]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[66]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[67]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[68]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[69]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[70]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[71]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[72]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[73]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[74]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[75]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[76]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[77]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[78]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[79]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[80]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[81]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[82]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[83]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[84]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[87])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[12]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[13]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[14]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[15]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[16]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[17]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[18]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[19]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[20]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[21]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[22]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[23]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[24]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[25]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[26]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[27]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[28]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[29]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[30]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[31]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[32]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[33]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[34]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[35]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[36]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[37]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[38]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[39]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[40]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[41]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[42]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[43]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[44]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[45]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[46]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[47]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[48]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[49]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[50]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[51]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[52]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[53]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[54]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[55]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[56]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[57]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[58]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[59]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[60]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[61]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[62]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[63]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[64]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[65]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[66]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[67]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[68]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[69]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[70]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[71]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[72]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[73]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[74]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[75]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[76]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[77]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[78]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[79]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[80]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[81]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[82]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[83]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[84]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[85]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[88])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[12]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[13]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[14]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[15]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[16]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[17]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[18]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[19]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[20]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[21]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[22]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[23]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[24]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[25]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[26]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[27]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[28]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[29]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[30]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[31]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[32]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[33]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[34]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[35]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[36]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[37]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[38]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[39]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[40]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[41]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[42]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[43]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[44]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[45]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[46]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[47]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[48]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[49]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[50]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[51]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[52]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[53]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[54]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[55]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[56]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[57]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[58]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[59]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[60]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[61]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[62]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[63]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[64]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[65]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[66]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[67]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[68]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[69]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[70]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[71]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[72]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[73]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[74]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[75]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[76]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[77]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[78]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[79]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[80]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[81]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[82]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[83]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[84]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[85]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[86]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[89])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[12]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[13]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[14]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[15]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[16]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[17]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[18]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[19]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[20]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[21]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[22]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[23]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[24]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[25]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[26]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[27]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[28]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[29]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[30]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[31]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[32]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[33]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[34]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[35]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[36]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[37]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[38]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[39]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[40]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[41]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[42]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[43]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[44]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[45]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[46]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[47]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[48]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[49]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[50]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[51]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[52]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[53]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[54]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[55]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[56]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[57]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[58]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[59]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[60]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[61]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[62]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[63]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[64]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[65]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[66]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[67]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[68]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[69]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[70]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[71]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[72]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[73]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[74]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[75]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[76]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[77]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[78]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[79]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[80]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[81]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[82]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[83]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[84]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[85]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[86]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[87]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[90])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[12]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[13]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[14]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[15]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[16]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[17]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[18]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[19]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[20]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[21]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[22]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[23]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[24]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[25]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[26]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[27]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[28]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[29]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[30]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[31]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[32]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[33]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[34]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[35]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[36]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[37]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[38]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[39]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[40]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[41]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[42]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[43]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[44]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[45]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[46]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[47]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[48]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[49]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[50]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[51]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[52]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[53]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[54]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[55]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[56]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[57]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[58]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[59]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[60]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[61]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[62]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[63]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[64]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[65]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[66]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[67]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[68]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[69]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[70]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[71]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[72]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[73]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[74]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[75]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[76]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[77]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[78]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[79]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[80]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[81]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[82]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[83]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[84]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[85]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[86]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[87]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[88]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[91])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[12]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[13]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[14]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[15]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[16]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[17]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[18]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[19]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[20]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[21]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[22]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[23]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[24]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[25]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[26]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[27]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[28]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[29]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[30]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[31]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[32]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[33]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[34]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[35]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[36]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[37]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[38]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[39]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[40]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[41]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[42]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[43]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[44]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[45]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[46]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[47]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[48]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[49]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[50]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[51]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[52]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[53]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[54]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[55]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[56]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[57]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[58]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[59]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[60]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[61]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[62]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[63]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[64]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[65]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[66]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[67]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[68]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[69]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[70]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[71]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[72]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[73]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[74]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[75]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[76]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[77]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[78]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[79]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[80]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[81]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[82]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[83]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[84]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[85]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[86]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[87]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[88]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[89]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[92])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[12]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[13]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[14]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[15]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[16]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[17]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[18]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[19]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[20]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[21]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[22]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[23]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[24]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[25]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[26]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[27]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[28]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[29]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[30]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[31]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[32]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[33]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[34]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[35]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[36]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[37]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[38]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[39]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[40]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[41]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[42]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[43]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[44]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[45]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[46]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[47]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[48]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[49]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[50]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[51]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[52]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[53]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[54]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[55]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[56]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[57]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[58]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[59]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[60]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[61]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[62]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[63]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[64]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[65]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[66]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[67]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[68]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[69]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[70]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[71]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[72]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[73]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[74]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[75]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[76]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[77]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[78]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[79]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[80]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[81]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[82]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[83]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[84]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[85]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[86]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[87]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[88]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[89]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[90]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[93])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[12]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[13]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[14]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[15]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[16]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[17]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[18]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[19]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[20]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[21]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[22]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[23]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[24]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[25]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[26]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[27]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[28]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[29]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[30]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[31]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[32]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[33]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[34]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[35]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[36]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[37]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[38]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[39]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[40]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[41]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[42]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[43]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[44]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[45]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[46]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[47]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[48]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[49]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[50]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[51]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[52]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[53]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[54]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[55]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[56]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[57]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[58]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[59]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[60]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[61]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[62]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[63]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[64]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[65]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[66]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[67]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[68]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[69]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[70]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[71]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[72]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[73]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[74]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[75]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[76]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[77]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[78]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[79]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[80]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[81]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[82]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[83]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[84]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[85]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[86]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[87]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[88]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[89]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[90]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[91]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[94])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[12]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[13]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[14]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[15]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[16]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[17]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[18]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[19]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[20]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[21]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[22]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[23]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[24]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[25]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[26]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[27]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[28]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[29]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[30]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[31]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[32]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[33]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[34]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[35]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[36]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[37]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[38]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[39]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[40]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[41]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[42]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[43]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[44]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[45]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[46]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[47]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[48]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[49]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[50]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[51]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[52]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[53]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[54]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[55]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[56]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[57]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[58]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[59]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[60]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[61]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[62]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[63]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[64]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[65]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[66]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[67]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[68]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[69]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[70]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[71]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[72]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[73]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[74]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[75]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[76]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[77]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[78]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[79]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[80]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[81]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[82]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[83]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[84]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[85]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[86]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[87]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[88]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[89]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[90]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[91]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[92]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[95])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[12]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[13]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[14]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[15]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[16]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[17]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[18]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[19]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[20]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[21]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[22]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[23]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[24]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[25]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[26]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[27]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[28]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[29]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[30]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[31]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[32]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[33]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[34]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[35]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[36]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[37]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[38]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[39]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[40]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[41]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[42]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[43]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[44]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[45]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[46]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[47]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[48]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[49]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[50]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[51]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[52]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[53]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[54]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[55]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[56]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[57]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[58]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[59]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[60]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[61]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[62]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[63]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[64]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[65]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[66]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[67]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[68]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[69]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[70]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[71]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[72]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[73]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[74]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[75]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[76]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[77]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[78]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[79]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[80]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[81]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[82]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[83]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[84]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[85]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[86]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[87]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[88]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[89]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[90]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[91]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[92]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[93]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[96])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[12]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[13]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[14]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[15]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[16]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[17]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[18]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[19]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[20]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[21]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[22]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[23]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[24]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[25]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[26]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[27]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[28]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[29]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[30]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[31]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[32]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[33]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[34]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[35]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[36]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[37]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[38]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[39]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[40]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[41]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[42]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[43]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[44]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[45]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[46]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[47]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[48]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[49]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[50]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[51]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[52]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[53]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[54]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[55]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[56]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[57]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[58]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[59]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[60]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[61]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[62]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[63]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[64]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[65]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[66]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[67]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[68]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[69]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[70]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[71]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[72]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[73]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[74]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[75]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[76]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[77]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[78]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[79]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[80]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[81]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[82]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[83]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[84]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[85]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[86]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[87]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[88]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[89]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[90]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[91]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[92]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[93]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[94]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[97])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[12]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[13]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[14]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[15]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[16]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[17]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[18]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[19]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[20]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[21]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[22]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[23]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[24]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[25]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[26]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[27]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[28]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[29]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[30]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[31]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[32]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[33]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[34]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[35]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[36]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[37]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[38]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[39]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[40]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[41]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[42]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[43]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[44]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[45]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[46]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[47]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[48]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[49]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[50]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[51]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[52]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[53]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[54]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[55]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[56]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[57]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[58]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[59]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[60]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[61]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[62]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[63]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[64]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[65]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[66]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[67]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[68]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[69]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[70]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[71]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[72]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[73]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[74]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[75]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[76]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[77]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[78]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[79]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[80]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[81]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[82]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[83]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[84]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[85]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[86]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[87]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[88]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[89]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[90]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[91]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[92]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[93]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[94]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[95]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[98])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[12]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[13]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[14]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[15]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[16]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[17]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[18]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[19]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[20]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[21]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[22]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[23]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[24]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[25]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[26]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[27]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[28]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[29]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[30]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[31]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[32]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[33]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[34]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[35]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[36]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[37]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[38]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[39]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[40]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[41]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[42]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[43]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[44]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[45]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[46]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[47]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[48]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[49]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[50]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[51]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[52]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[53]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[54]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[55]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[56]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[57]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[58]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[59]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[60]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[61]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[62]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[63]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[64]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[65]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[66]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[67]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[68]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[69]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[70]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[71]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[72]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[73]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[74]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[75]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[76]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[77]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[78]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[79]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[80]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[81]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[82]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[83]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[84]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[85]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[86]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[87]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[88]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[89]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[90]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[91]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[92]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[93]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[94]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[95]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[96]);
	hash *= prime;
	return hash;
}

constexpr HashedID hash(const char(&input)[99])
{
	HashedID hash = 0x811c9dc5;
	const HashedID prime = 0x01000193;

	hash ^= static_cast<HashedID>(input[0]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[1]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[2]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[3]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[4]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[5]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[6]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[7]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[8]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[9]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[10]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[11]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[12]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[13]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[14]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[15]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[16]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[17]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[18]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[19]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[20]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[21]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[22]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[23]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[24]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[25]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[26]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[27]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[28]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[29]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[30]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[31]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[32]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[33]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[34]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[35]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[36]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[37]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[38]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[39]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[40]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[41]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[42]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[43]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[44]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[45]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[46]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[47]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[48]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[49]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[50]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[51]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[52]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[53]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[54]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[55]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[56]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[57]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[58]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[59]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[60]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[61]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[62]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[63]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[64]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[65]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[66]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[67]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[68]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[69]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[70]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[71]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[72]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[73]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[74]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[75]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[76]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[77]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[78]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[79]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[80]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[81]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[82]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[83]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[84]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[85]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[86]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[87]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[88]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[89]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[90]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[91]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[92]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[93]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[94]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[95]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[96]);
	hash *= prime;
	hash ^= static_cast<HashedID>(input[97]);
	hash *= prime;
	return hash;
}